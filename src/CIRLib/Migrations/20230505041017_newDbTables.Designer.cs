// <auto-generated />
using System;
using CIRLib.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CIRLib.Migrations
{
    [DbContext(typeof(CIRLibContext))]
    [Migration("20230505041017_newDbTables")]
    partial class newDbTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CIRLib.ObjectModel.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("RegistryRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId", "RegistryRefId", "SourceId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CIRLib.ObjectModel.Models.Entry", b =>
                {
                    b.Property<string>("CategoryRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("RegistryRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("SourceRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.Property<string>("CIRId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdInSource")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(5);

                    b.Property<bool>("Inactive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryRefId", "RegistryRefId", "SourceRefId", "SourceId");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("CIRLib.ObjectModel.Models.Property", b =>
                {
                    b.Property<string>("CategoryRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("RegistryRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("SourceRefId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.Property<string>("IdInSource")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(5);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryRefId", "RegistryRefId", "SourceRefId", "SourceId", "IdInSource");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("CIRLib.ObjectModel.Models.PropertyValue", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("PropertyValue");
                });

            modelBuilder.Entity("CIRLib.ObjectModel.Models.Registry", b =>
                {
                    b.Property<string>("RegistryId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RegistryId");

                    b.ToTable("Registry");
                });
#pragma warning restore 612, 618
        }
    }
}
