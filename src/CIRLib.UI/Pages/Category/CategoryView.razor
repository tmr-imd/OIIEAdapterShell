@page "/category-view"

@using ObjModels = CIRLib.ObjectModel.Models;
@using CIRLib.Persistence;
@using System.Security.Claims;
@using CIRLib.UI.Pages.Category;
@using CIRServices;

@inject CategoryServices Services
@inject NavigationManager NavigationManager
@inject CIRLibContextFactory Factory

<div class="panel-heading alert-primary">
    <h3 class="panel-title">Category
        <button class="btn btn-primary" @onclick="(() => AddCategory())" style="float: right;">
            <i class="oi oi-pencil"></i> Add Category
        </button> 
    </h3>
    
<table class="col-span-full min-w-full divide-y divide-gray-300 border roundeed data-table">
    <thead class="bg-gray-100">
        <tr>
            <th scope="col">Category Id</th>
            <th scope="col">Source Id</th>            
            <th scope="col">Registry Id</th>
            <th scope="col">Description</th>
            <th scope="col">Created By</th> 
            <th scope="col">Date Created</th>
            <th scope="col">Modified By</th> 
            <th scope="col">Date Modified</th>
            <th></th>        
        </tr>
    </thead>
    <tbody class="bg-white divide-y divide-gray-200">
        @foreach (var Category in CategoryList)
        {
            <tr>
                <td>@Category.CategoryId</td>
                <td>@Category.CategorySourceId</td>
                <td>@Category.RegistryRefId</td>
                <td>@Category.CategoryDescription</td>
                <td>@Category.CreatedBy</td>
                <td>@Category.DateCreated</td>
                <td>@Category.ModifiedBy</td>
                <td>@Category.DateModified</td>
                <td> 
                    <button class="btn btn-primary" @onclick="(() =>EditCategory(Category.Id))">
                            Edit
                    </button>                    
                </td> 
            </tr>
        } 
    </tbody>
</table>
</div>

@code {
    [Parameter]
    public string SearchFilterCat { get; set;} = "";
    [Parameter]
    public string SearchFilterReg { get; set;} = "";
    [Parameter]
    public string SearchFilterEntry { get; set;} = "";
    [Parameter]
    public string SearchFilterProperty { get; set;} = "";
    [Parameter]
    public string SearchFilterPropertyValue { get; set;} = "";
    
    public List<ObjModels.Category> CategoryList{ get; set; } = new List<ObjModels.Category>();

    protected override async Task OnParametersSetAsync()
    {
        await SearchForCategory();
        await base.OnParametersSetAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    void EditCategory(Guid Id)
    {
        NavigationManager.NavigateTo($"/edit-category/{Id}");
    }
    void AddCategory()
    {
        NavigationManager.NavigateTo("/edit-category");
    } 
    async Task SearchForCategory()
    {
        var Context = Factory.CreateDbContext(new ClaimsPrincipal());
        CategoryList = Services.GetCategoryFromFilters(SearchFilterEntry, SearchFilterReg,
            SearchFilterCat, SearchFilterProperty, SearchFilterPropertyValue, Context.Result);
    }

}
